name: ROS2 CI

on:
  push:
  workflow_dispatch:

jobs:
  ros2_build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image_user_name: 
          - ivis-shun-shimada
        image_name:
          - base-humble-image
        image_tag:
          - v2
        container_name:
          - ros-container
        rosdistro: 
          - humble
      
    steps:
    - name: create src dir
      run: |
        mkdir -p src
        echo "cache" > src/cache

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        path: src
    - name: Cache ROS package.xml
      id: cache-ros-packages
      uses: actions/cache@v2
      with:
        path: src/cache
        key: ${{ runner.os }}-ros-${{ hashFiles('**/package.xml') }}
        restore-keys: |
          ${{ runner.os }}-ros-
          
    - name: check dir
      run: cd src && ls -l
      
    - name: Cache not restored (package.xml change)
      if: steps.cache-ros-packages.outputs.cache-hit != 'true'
      run: echo "on rosdep install"
    - name: Cache restored(package.xml no change)
      if: steps.cache-ros-packages.outputs.cache-hit == 'true'
      run: echo "off rosdep install"
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: docker pull
      run: docker pull ghcr.io/${{ matrix.image_user_name }}/${{ matrix.image_name }}:${{ matrix.image_tag }}  
    - name: docker run
      run: docker run -id -v $(pwd)/src:/root/ros2_ws/src --name ${{ matrix.container_name }} ghcr.io/${{ matrix.image_user_name }}/${{ matrix.image_name }}:${{ matrix.image_tag }} 
      
    - name: Install dependencies:rosdep init
      if: steps.cache-ros-packages.outputs.cache-hit != 'true'
      run: docker exec ${{ matrix.container_name }} sh -c 
        "
        rm -f /etc/ros/rosdep/sources.list.d/20-default.list;
        sudo rosdep init
        "
    - name: Install dependencies:rosdep install
      if: steps.cache-ros-packages.outputs.cache-hit != 'true'
      run: docker exec ${{ matrix.container_name }} sh -c 
        "
        rosdep update;
        apt-get update;
        rosdep install --from-path . -i -y --rosdistro ${{ matrix.rosdistro }}
        "
    - name: Set up ROS2 workspace:build
      if: steps.cache-ros-packages.outputs.cache-hit != 'true'
      run: docker exec ${{ matrix.container_name }} sh -c ". /opt/ros/${{ matrix.rosdistro }}/setup.sh; colcon build"
    - name: Commit docker continaer
      if: steps.cache-ros-packages.outputs.cache-hit != 'true'
      run: docker commit ${{ matrix.container_name }} ghcr.io/${{ matrix.image_user_name }}/${{ matrix.image_name }}:${{ matrix.image_tag }}  
    - name: Push docker image
      if: steps.cache-ros-packages.outputs.cache-hit != 'true'
      run: docker push ghcr.io/${{ matrix.image_user_name }}/${{ matrix.image_name }}:${{ matrix.image_tag }}  

